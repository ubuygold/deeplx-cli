name: DeepLX CLI Release

on:
  push:
    tags:
      - '[vV]*'
  # 可选：也可以在推送到main分支时构建（但不发布）
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: linux
            goarch: arm64
            suffix: ""
          - goos: windows
            goarch: amd64
            suffix: ".exe"
          - goos: windows
            goarch: arm64
            suffix: ".exe"
          - goos: darwin
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""
          - goos: freebsd
            goarch: amd64
            suffix: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          BINARY_NAME="deeplx-cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}"
          go build -trimpath -ldflags="-s -w -X 'main.version=$VERSION'" -o "$BINARY_NAME" main.go

          # 创建校验和
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum "$BINARY_NAME" > "$BINARY_NAME.sha256"
          else
            shasum -a 256 "$BINARY_NAME" > "$BINARY_NAME.sha256"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deeplx-cli-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            deeplx-cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}
            deeplx-cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}.sha256

  release:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare release files
        run: |
          mkdir -p ./release
          find ./artifacts -type f -name "deeplx-cli-*" -exec cp {} ./release/ \;
          ls -la ./release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ./release/*
